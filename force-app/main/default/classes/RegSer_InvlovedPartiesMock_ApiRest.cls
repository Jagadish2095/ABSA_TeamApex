/**
* Mock class for Reg Services Involved Parties
* @author  Himanshu Nimje
* @created 2018-11-23
*/

@isTest
global class RegSer_InvlovedPartiesMock_ApiRest implements HttpCalloutMock {

    Private String typeTest;
    
    global RegSer_InvlovedPartiesMock_ApiRest (final String typeTest){
        this.typeTest = typeTest;
    }
    
    // Implement this interface method
    global HTTPResponse respond(HTTPRequest request) {
        // Create a fake response
        HttpResponse response = new HttpResponse();
        response.setHeader('Content-Type', 'application/json');
        if(typeTest == StringConstants.POSITIVE_STRING){
            response.setBody('{  "content" : {    "suin" : "1-O1IEU",    "created" : "2018-08-21T11:19:53",    "updated" : "2019-01-15T14:26:01",    "individual" : {      "dateOfBirth" : "1984-05-20",      "surname" : "AKHIL",      "initials" : "M",      "knownAs" : null,      "occupation" : "",      "occupationStatus" : "Full Time Employed",      "notificationOfDeathDate" : null,      "salutation" : {        "code" : "Mrs",        "description" : "Mrs"      },      "givenNames" : null,      "gender" : {        "code" : "Female",        "description" : "Female"      },      "raceClassification" : null,      "maritalContractType" : null,      "maritalStatus" : {        "code" : "Single",        "description" : "Single"      },      "residentialStatus" : {        "code" : "01",        "description" : "SA RESIDENT"      },      "clientClassification" : {        "code" : "Private Individual",        "description" : "Private Individual"      },      "name" : "MITH",      "pepStatus" : null,      "subStatus" : null,      "status" : null,      "ficaAddressUpdateDate" : "2014-03-29",      "ficaAddressAttestedDate" : "2014-03-29",      "sourceOfIncomeAttestedDate" : "2014-03-29",      "nextRefreshDate" : "2019-03-29",      "identificationUpdateDate" : "2014-03-29",      "identificationAttestedDate" : "2019-01-15"    },    "formalOrganisation" : null,    "informalOrganisation" : null,    "organisationUnit" : null,    "sourcesOfIncome" : [ ],    "sourcesOfWealth" : [ ],    "activeInIndustries" : [ ],    "flags" : [ {      "effectiveDate" : null,      "yesNoFlag" : true,      "type" : {        "code" : "ABSA",        "description" : "ABSA"      }    }, {      "effectiveDate" : "2017-07-10",      "yesNoFlag" : true,      "type" : {        "code" : "Contact method : Mail",        "description" : "Contact method : Mail"      }    }, {      "effectiveDate" : "2017-07-10",      "yesNoFlag" : true,      "type" : {        "code" : "Marketing Consent",        "description" : "Marketing Consent"      }    }, {      "effectiveDate" : "2017-07-10",      "yesNoFlag" : false,      "type" : {        "code" : "Marketing Preference : Call",        "description" : "Marketing Preference : Call"      }    }, {      "effectiveDate" : "2017-07-10",      "yesNoFlag" : true,      "type" : {        "code" : "Marketing Preference: Email",        "description" : "Marketing Preference: Email"      }    }, {      "effectiveDate" : "2017-07-10",      "yesNoFlag" : true,      "type" : {        "code" : "Marketing Preference: Mail",        "description" : "Marketing Preference: Mail"      }    }, {      "effectiveDate" : "2017-07-10",      "yesNoFlag" : false,      "type" : {        "code" : "Marketing Preference: SMS",        "description" : "Marketing Preference: SMS"      }    }, {      "effectiveDate" : null,      "yesNoFlag" : false,      "type" : {        "code" : "SBU Segment",        "description" : "SBU Segment"      }    }, {      "effectiveDate" : "2019-03-12",      "yesNoFlag" : true,      "type" : {        "code" : "processStatus",        "description" : "processStatus"      }    } ],    "countries" : [ {      "name" : "Somalia",      "isoCode" : null,      "type" : {        "code" : "BirthCountry",        "description" : "BirthCountry"      },      "context" : {        "code" : "BirthCountry",        "description" : "BirthCountry"      }    }, {      "name" : "",      "isoCode" : null,      "type" : {        "code" : "ResidenceCountry",        "description" : "ResidenceCountry"      },      "context" : {        "code" : "ResidenceCountry",        "description" : "ResidenceCountry"      }    }, {      "name" : "South African",      "isoCode" : null,      "type" : {        "code" : "Nationality",        "description" : "Nationality"      },      "context" : {        "code" : "Nationality",        "description" : "Nationality"      }    } ],    "identifications" : [ {      "number" : "AKHILAM001",      "type" : {        "code" : "CIF Code",        "description" : "CIF Code"      },      "expiryDate" : null,      "issueDate" : null    }, {      "number" : "8405200852088",      "type" : {        "code" : "ID Number",        "description" : "ID Number"      },      "expiryDate" : null,      "issueDate" : null    }, {      "number" : "1-O1IEU",      "type" : {        "code" : "PARTYMDM",        "description" : "PARTYMDM"      },      "expiryDate" : null,      "issueDate" : null    }, {      "number" : "1-O1IEU",      "type" : {        "code" : "REGSERVICES",        "description" : "REGSERVICES"      },      "expiryDate" : null,      "issueDate" : null    } ],    "addresses" : {      "preferredCommunicationChannel" : null,      "telephonicAddress" : [ {        "countryCode" : "+27",        "diallingCode" : "084",        "number" : "7506741",        "context" : {          "code" : "MainCellPhone",          "description" : "MainCellPhone"        },        "type" : {          "code" : "MainCellPhone",          "description" : "MainCellPhone"        }      }, {        "countryCode" : "+27",        "diallingCode" : "084",        "number" : "7506741",        "context" : {          "code" : "Personal",          "description" : "Personal"        },        "type" : {          "code" : "Personal",          "description" : "Personal"        }      } ],      "addresses" : [ {        "addressName1" : "268 Republic Road",        "addressName2" : "Near Cresta Mall",        "suburbName" : "Sandton",        "cityName" : "Randburg",        "countryName" : "",        "postalCode" : "2194",        "context" : {          "code" : "Residential",          "description" : "Residential"        },        "gpsCoordinates" : null,        "type" : {          "code" : "Residential",          "description" : "Residential"        }      }, {        "addressName1" : "270 Republic Road",        "addressName2" : "",        "suburbName" : "",        "cityName" : "Randburg",        "countryName" : "",        "postalCode" : "2194",        "context" : {          "code" : "Postal",          "description" : "Postal"        },        "gpsCoordinates" : null,        "type" : {          "code" : "Postal",          "description" : "Postal"        }      } ],      "electronicAddresses" : [ ]    },    "relationships" : [ ],    "relatedDocuments" : [ {      "source" : "CCL",      "lastRefreshDate" : "2014-03-18",      "nextRefreshDate" : "2014-03-18",      "receivedDate" : "2014-03-18",      "uniqueIdInSourceSystem" : "Test18102900001",      "vettedDate" : "2014-03-18",      "context" : {        "code" : "ProofOfAddress",        "description" : "ProofOfAddress"      },      "type" : {        "code" : "ProofOfAddress",        "description" : "ProofOfAddress"      },      "subType" : {        "code" : "UtilityBill",        "description" : "UtilityBill"      }    }, {      "source" : "CRS",      "lastRefreshDate" : "2014-03-18",      "nextRefreshDate" : "2014-03-18",      "receivedDate" : "2014-03-18",      "uniqueIdInSourceSystem" : "Test18102900002",      "vettedDate" : "2014-03-18",      "context" : {        "code" : "ProofOfId",        "description" : "ProofOfId"      },      "type" : {        "code" : "ProofOfId",        "description" : "ProofOfId"      },      "subType" : {        "code" : "SAIDCard",        "description" : "SAIDCard"      }    } ],    "riskRating" : "Medium",    "name" : "MITH"  },  "links" : [ {    "rel" : "regulatory-compliance",    "href" : "/v1/involved-parties/regulatory-compliance/Individual/Individual"  } ]}');
            response.setStatusCode(200);
        }else if(typeTest == StringConstants.NEGATIVE_STRING){
            response.setBody(StringConstants.ERROR_MSG_READ_TIMED_OUT);
            response.setStatusCode(400);
        }else if(typeTest == StringConstants.INTEGRATION_STATUS_FAILED){
            response.setBody(StringConstants.ERROR_MSG_READ_TIMED_OUT);
            response.setStatusCode(403);
        }else if(typeTest == StringConstants.ERROR_STRING){
            response.setBody(StringConstants.ERROR_MSG_READ_TIMED_OUT);
            response.setStatusCode(404);
        }else if(typeTest == StringConstants.UNHANDLED_EXCEPTION_STATUS){
            response.setBody('{}');
            response.setStatusCode(200);
        }
        return response; 
    }
}